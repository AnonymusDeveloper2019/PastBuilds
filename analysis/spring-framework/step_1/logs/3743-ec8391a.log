Exception in thread "DisconnectableInputStream source reader" org.gradle.api.UncheckedIOException: java.io.IOException: Bad file descriptor
	at org.gradle.internal.UncheckedException.throwAsUncheckedException(UncheckedException.java:43)
	at org.gradle.util.DisconnectableInputStream$1.run(DisconnectableInputStream.java:125)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: Bad file descriptor
	at java.io.FileInputStream.readBytes(Native Method)
	at java.io.FileInputStream.read(FileInputStream.java:255)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at org.gradle.util.DisconnectableInputStream$1.run(DisconnectableInputStream.java:96)
	... 1 more
:buildSrc:compileJava UP-TO-DATE
:buildSrc:compileGroovy
:buildSrc:processResources
:buildSrc:classes
:buildSrc:jar
:buildSrc:assemble
:buildSrc:compileTestJava UP-TO-DATE
:buildSrc:compileTestGroovy UP-TO-DATE
:buildSrc:processTestResources UP-TO-DATE
:buildSrc:testClasses UP-TO-DATE
:buildSrc:test UP-TO-DATE
:buildSrc:check UP-TO-DATE
:buildSrc:build
:assemble
:build
:spring-core:cglibRepackJar
:spring-core:objenesisRepackJar
:spring-core:compileJava
:spring-core:processResources UP-TO-DATE
:spring-core:classes
:spring-core:jar
:spring-beans:compileJava
:spring-beans:processResources
:spring-beans:classes
:spring-beans-groovy:compileJava SKIPPED
:spring-beans-groovy:compileGroovy
:spring-beans-groovy:processResources UP-TO-DATE
:spring-beans-groovy:classes
:spring-beans:jar
:spring-aop:compileJava
:spring-aop:processResources
:spring-aop:classes
:spring-aop:jar
:spring-aop:sourcesJar
:spring-aop:assemble
:spring-aop:build
:spring-expression:compileJava
:spring-expression:processResources
:spring-expression:classes
:spring-expression:jar
:spring-instrument:compileJava
:spring-instrument:processResources UP-TO-DATE
:spring-instrument:classes
:spring-instrument:jar
:spring-context:compileJava
:spring-context:compileGroovy UP-TO-DATE
:spring-context:processResources
:spring-context:classes
:spring-context:jar
:spring-tx:compileJava
:spring-tx:processResources
:spring-tx:classes
:spring-tx:jar
:spring-jdbc:compileJava
:spring-jdbc:processResources
:spring-jdbc:classes
:spring-jdbc:jar
:spring-context-support:compileJava
:spring-context-support:processResources
:spring-context-support:classes
:spring-context-support:jar
:spring-oxm:compileJava
:spring-oxm:processResources
:spring-oxm:classes
:spring-oxm:jar
:spring-web:compileJava/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java:51: error: cannot find symbol
		NettyDataBufferFactory bufferFactory = new NettyDataBufferFactory(request.channel().alloc());
		                                                                         ^
  symbol:   method channel()
  location: variable request of type HttpServerRequest
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java:75: error: incompatible types: NettyOutbound cannot be converted to Mono<Void>
		return this.response.send(body);
		                         ^
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java:82: error: incompatible types: NettyOutbound cannot be converted to Mono<Void>
		return this.response.sendGroups(body);
		                               ^
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java:89: error: cannot find symbol
			this.response.disableChunkedTransfer();
			             ^
  symbol:   method disableChunkedTransfer()
  location: variable response of type HttpServerResponse
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java:117: error: incompatible types: bad return type in lambda expression
		return doCommit(() -> this.response.sendFile(file.toPath(), position, count));
		                                            ^
    NettyOutbound cannot be converted to Mono<Void>
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpResponse.java:49: error: cannot access Disposable
		this.dataBufferFactory = new NettyDataBufferFactory(response.channel().alloc());
		                         ^
  class file for reactor.core.Disposable not found
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpConnector.java:68: error: cannot find symbol
				.otherwise(HttpClientException.class, exc -> Mono.just(exc.getResponse()))
				                                                          ^
  symbol:   method getResponse()
  location: variable exc of type HttpClientException
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java:57: error: cannot find symbol
		this.bufferFactory = new NettyDataBufferFactory(httpRequest.channel().alloc());
		                                                           ^
  symbol:   method channel()
  location: variable httpRequest of type HttpClientRequest
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java:78: error: no suitable method found for then(NettyOutbound)
		return applyBeforeCommit().then(this.httpRequest
		                          ^
    method Mono.<R>then(Function<? super Void,? extends Mono<? extends R>>) is not applicable
      (cannot infer type-variable(s) R
        (argument mismatch; NettyOutbound cannot be converted to Function<? super Void,? extends Mono<? extends R>>))
    method Mono.<V#1>then(Mono<V#1>) is not applicable
      (cannot infer type-variable(s) V#1
        (argument mismatch; NettyOutbound cannot be converted to Mono<V#1>))
    method Mono.<V#2>then(Supplier<? extends Mono<V#2>>) is not applicable
      (cannot infer type-variable(s) V#2
        (argument mismatch; NettyOutbound cannot be converted to Supplier<? extends Mono<V#2>>))
  where R,T,V#1,V#2 are type-variables:
    R extends Object declared in method <R>then(Function<? super T,? extends Mono<? extends R>>)
    T extends Object declared in class Mono
    V#1 extends Object declared in method <V#1>then(Mono<V#1>)
    V#2 extends Object declared in method <V#2>then(Supplier<? extends Mono<V#2>>)
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java:86: error: no suitable method found for then(NettyOutbound)
		return applyBeforeCommit().then(this.httpRequest
		                          ^
    method Mono.<R>then(Function<? super Void,? extends Mono<? extends R>>) is not applicable
      (cannot infer type-variable(s) R
        (argument mismatch; NettyOutbound cannot be converted to Function<? super Void,? extends Mono<? extends R>>))
    method Mono.<V#1>then(Mono<V#1>) is not applicable
      (cannot infer type-variable(s) V#1
        (argument mismatch; NettyOutbound cannot be converted to Mono<V#1>))
    method Mono.<V#2>then(Supplier<? extends Mono<V#2>>) is not applicable
      (cannot infer type-variable(s) V#2
        (argument mismatch; NettyOutbound cannot be converted to Supplier<? extends Mono<V#2>>))
  where R,T,V#1,V#2 are type-variables:
    R extends Object declared in method <R>then(Function<? super T,? extends Mono<? extends R>>)
    T extends Object declared in class Mono
    V#1 extends Object declared in method <V#1>then(Mono<V#1>)
    V#2 extends Object declared in method <V#2>then(Supplier<? extends Mono<V#2>>)
/home/ubuntu/bugs/spring-framework/spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java:97: error: no suitable method found for then(NettyOutbound)
		return applyBeforeCommit().then(httpRequest.sendHeaders());
		                          ^
    method Mono.<R>then(Function<? super Void,? extends Mono<? extends R>>) is not applicable
      (cannot infer type-variable(s) R
        (argument mismatch; NettyOutbound cannot be converted to Function<? super Void,? extends Mono<? extends R>>))
    method Mono.<V#1>then(Mono<V#1>) is not applicable
      (cannot infer type-variable(s) V#1
        (argument mismatch; NettyOutbound cannot be converted to Mono<V#1>))
    method Mono.<V#2>then(Supplier<? extends Mono<V#2>>) is not applicable
      (cannot infer type-variable(s) V#2
        (argument mismatch; NettyOutbound cannot be converted to Supplier<? extends Mono<V#2>>))
  where R,T,V#1,V#2 are type-variables:
    R extends Object declared in method <R>then(Function<? super T,? extends Mono<? extends R>>)
    T extends Object declared in class Mono
    V#1 extends Object declared in method <V#1>then(Mono<V#1>)
    V#2 extends Object declared in method <V#2>then(Supplier<? extends Mono<V#2>>)
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
11 errors
 FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':spring-web:compileJava'.
> Compilation failed; see the compiler error output for details.

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED

Total time: 20.778 secs
